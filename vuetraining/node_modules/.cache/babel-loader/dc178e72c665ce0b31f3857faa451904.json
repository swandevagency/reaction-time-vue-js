{"ast":null,"code":"export default {\n  name: 'App',\n  data() {\n    return {\n      containerShowing: false,\n      isPlaying: false,\n      delay: null,\n      isShowing: false,\n      timer: null,\n      reaction: 0,\n      reactionResult: '',\n      stopPlaying: false\n    };\n  },\n  methods: {\n    startPlaying() {\n      this.containerShowing = true;\n      this.delay = 2000 + Math.random() * 3000;\n      // container size:\n      let containerSize = 200 + Math.random() * 400;\n      console.log(containerSize, 'this is container size');\n      // this.$refs.container.style.height = `${containerSize}px`\n      // box size:\n      let boxSize = 50 + Math.random() * 100;\n      console.log(boxSize, 'this is box size');\n      // this.$refs.box.style.height = `${boxSize}px`\n      // this.$refs.box.style.width = `${boxSize}px`\n      // box position:\n      let position = 1 + Math.random() * (containerSize - boxSize);\n      console.log(position, 'this is position size');\n      // this.$refs.box.style.top = `${position}px`\n      // this.$refs.box.style.left = `${position}px`\n      setTimeout(() => {\n        this.isPlaying = true;\n        this.startTimer();\n      }, this.delay);\n    },\n    startTimer() {\n      this.timer = setInterval(() => {\n        this.reaction += 10;\n      }, 10);\n    },\n    stopTimer() {\n      this.isPlaying = false;\n      this.stopPlaying = true;\n      clearInterval(this.timer);\n      console.log(this.reaction);\n      if (this.reaction < 1000) {\n        this.reactionResult = 'Good';\n      } else if (this.reaction > 1000 && this.reaction < 2000) {\n        this.reactionResult = 'Not Bad';\n      } else {\n        this.reactionResult = 'Bad';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAUA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,IAAI,GAAG;IACL,OAAM;MACJC,gBAAgB,EAAE,KAAK;MACvBC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,CAAC;MACXC,cAAc,EAAE,EAAE;MAClBC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAY,GAAG;MACb,IAAI,CAACT,gBAAe,GAAI,IAAG;MAC3B,IAAI,CAACE,KAAK,GAAE,IAAG,GAAIQ,IAAI,CAACC,MAAM,EAAC,GAAI,IAAG;MACtC;MACA,IAAIC,aAAY,GAAI,GAAE,GAAIF,IAAI,CAACC,MAAM,EAAC,GAAI,GAAE;MAC5CE,OAAO,CAACC,GAAG,CAACF,aAAa,EAAE,wBAAwB,CAAC;MACpD;MACA;MACA,IAAIG,OAAM,GAAI,EAAC,GAAIL,IAAI,CAACC,MAAM,EAAC,GAAI,GAAE;MACrCE,OAAO,CAACC,GAAG,CAACC,OAAO,EAAE,kBAAkB,CAAC;MACxC;MACA;MACA;MACA,IAAIC,QAAQ,GAAE,IAAIN,IAAI,CAACC,MAAM,EAAC,IAAKC,aAAY,GAAIG,OAAO;MAC1DF,OAAO,CAACC,GAAG,CAACE,QAAQ,EAAE,uBAAuB,CAAC;MAC9C;MACA;MACAC,UAAU,CAAC,MAAK;QACd,IAAI,CAAChB,SAAS,GAAE,IAAG;QACnB,IAAI,CAACiB,UAAU,EAAC;MAClB,CAAC,EAAE,IAAI,CAAChB,KAAK;IACf,CAAC;IACDgB,UAAU,GAAG;MACX,IAAI,CAACd,KAAI,GAAIe,WAAW,CAAC,MAAK;QAC5B,IAAI,CAACd,QAAO,IAAK,EAAC;MACpB,CAAC,EAAC,EAAE;IACN,CAAC;IACDe,SAAS,GAAG;MACV,IAAI,CAACnB,SAAQ,GAAI,KAAI;MACrB,IAAI,CAACM,WAAU,GAAI,IAAG;MACtBc,aAAa,CAAC,IAAI,CAACjB,KAAK;MACxBS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,QAAQ,CAAC;MAC1B,IAAG,IAAI,CAACA,QAAO,GAAI,IAAI,EAAC;QACtB,IAAI,CAACC,cAAa,GAAI,MAAK;MAC7B,OACK,IAAG,IAAI,CAACD,QAAO,GAAI,IAAG,IAAK,IAAI,CAACA,QAAO,GAAI,IAAI,EAAE;QACpD,IAAI,CAACC,cAAa,GAAI,SAAQ;MAChC,CAAC,MAAK;QACJ,IAAI,CAACA,cAAa,GAAI,KAAI;MAC5B;IACF;EACF;AACF","names":["name","data","containerShowing","isPlaying","delay","isShowing","timer","reaction","reactionResult","stopPlaying","methods","startPlaying","Math","random","containerSize","console","log","boxSize","position","setTimeout","startTimer","setInterval","stopTimer","clearInterval"],"sourceRoot":"","sources":["/Users/shayan/Desktop/vue/vuetraining2/src/App.vue"],"sourcesContent":["<template>\n  <button @click=\"startPlaying\">play</button>\n  <p v-show=\"stopPlaying\">Reaction Result: {{reactionResult}}</p>\n  <div class=\"boxContainer\" ref=\"container\" v-show=\"containerShowing\">\n    <div class=\"box\" ref=\"box\" v-show=\"isPlaying\" @click=\"stopTimer()\"></div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n  data() {\n    return{\n      containerShowing: false,\n      isPlaying: false,\n      delay: null,\n      isShowing: false,\n      timer: null,\n      reaction: 0,\n      reactionResult: '',\n      stopPlaying: false\n    }\n  },\n  methods: {\n    startPlaying() {\n      this.containerShowing = true\n      this.delay= 2000 + Math.random() * 3000\n      // container size:\n      let containerSize = 200 + Math.random() * 400\n      console.log(containerSize, 'this is container size');\n      // this.$refs.container.style.height = `${containerSize}px`\n      // box size:\n      let boxSize = 50 + Math.random() * 100\n      console.log(boxSize, 'this is box size');\n      // this.$refs.box.style.height = `${boxSize}px`\n      // this.$refs.box.style.width = `${boxSize}px`\n      // box position:\n      let position= 1 + Math.random() * (containerSize - boxSize)\n      console.log(position, 'this is position size');\n      // this.$refs.box.style.top = `${position}px`\n      // this.$refs.box.style.left = `${position}px`\n      setTimeout(()=> {\n        this.isPlaying= true\n        this.startTimer()\n      }, this.delay)\n    },\n    startTimer() {\n      this.timer = setInterval(()=> {\n        this.reaction += 10\n      },10)\n    },\n    stopTimer() {\n      this.isPlaying = false\n      this.stopPlaying = true\n      clearInterval(this.timer)\n      console.log(this.reaction);\n      if(this.reaction < 1000){\n        this.reactionResult = 'Good'\n      }\n      else if(this.reaction > 1000 && this.reaction < 2000) {\n        this.reactionResult = 'Not Bad'\n      }else {\n        this.reactionResult = 'Bad'\n      }\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 30px;\n}\nbutton {\n  height: 40px;\n  width: 60px;\n  font-size: 15px;\n  color: purple;\n  background-color: #e0d0e0;\n  border-color: transparent;\n  border-radius: 5px;\n  cursor: pointer;\n}\n.boxContainer {\n  border: 1px solid purple;\n  margin-top: 20px;\n  width: 100%;\n  position: relative;\n}\n.box {\n  background-color: purple;\n  position: absolute;\n  cursor: pointer;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}