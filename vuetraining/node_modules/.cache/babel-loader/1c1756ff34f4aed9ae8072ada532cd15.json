{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"boxContainer\",\n  ref: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    id: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startPlaying && $options.startPlaying(...args))\n  }, \"play\"), _withDirectives(_createElementVNode(\"p\", null, \"Reaction Result: \" + _toDisplayString($data.reactionResult), 513 /* TEXT, NEED_PATCH */), [[_vShow, $data.stopPlaying]]), _withDirectives(_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"div\", {\n    class: \"box\",\n    ref: \"box\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.stopTimer())\n  }, null, 512 /* NEED_PATCH */), [[_vShow, $data.isPlaying]])], 512 /* NEED_PATCH */), [[_vShow, $data.containerShowing]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAGOA,KAAK,EAAC,cAAc;EAACC,GAAG,EAAC;;;6DAF9BC,oBAAuD;IAA/CC,EAAE,EAAC,QAAQ;IAAEC,OAAK,yCAAEC,uDAAY;KAAE,MAAI,mBAC9CH,oBAA+D,WAAvC,mBAAiB,oBAAEI,oBAAc,0CAA9CA,iBAAW,qBACtBJ,oBAEM,OAFNK,UAEM,mBADJL,oBAAyE;IAApEF,KAAK,EAAC,KAAK;IAACC,GAAG,EAAC,KAAK;IAAqBG,OAAK,sCAAEC,kBAAS;4CAA5BC,eAAS,uCADIA,sBAAgB","names":["class","ref","_createElementVNode","id","onClick","$options","$data","_hoisted_1"],"sourceRoot":"","sources":["/Users/shayan/Desktop/vue/vuetraining2/src/App.vue"],"sourcesContent":["<template>\n  <button id=\"button\" @click=\"startPlaying\">play</button>\n  <p v-show=\"stopPlaying\">Reaction Result: {{reactionResult}}</p>\n  <div class=\"boxContainer\" ref=\"container\" v-show=\"containerShowing\">\n    <div class=\"box\" ref=\"box\" v-show=\"isPlaying\" @click=\"stopTimer()\"></div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n  data() {\n    return{\n      containerShowing: false,\n      isPlaying: false,\n      delay: null,\n      isShowing: false,\n      timer: null,\n      reaction: 0,\n      reactionResult: '',\n      stopPlaying: false\n    }\n  },\n  methods: {\n    startPlaying() {\n      this.containerShowing = true\n      this.delay= 2000 + Math.random() * 3000\n      // container size:\n      let containerSize = 200 + Math.random() * 400\n      console.log(containerSize, 'this is container size');\n      this.$refs.container.style.height = `${containerSize}px`\n      // box size:\n      let boxSize = 50 + Math.random() * 100\n      console.log(boxSize, 'this is box size');\n      this.$refs.box.style.height = `${boxSize}px`\n      this.$refs.box.style.width = `${boxSize}px`\n      // box position:\n      let position= 1 + Math.random() * (containerSize - boxSize)\n      console.log(position, 'this is position size');\n      this.$refs.box.style.top = `${position}px`\n      this.$refs.box.style.left = `${position}px`\n      setTimeout(()=> {\n        this.isPlaying= true\n        this.startTimer()\n      }, this.delay)\n    },\n    startTimer() {\n      this.timer = setInterval(()=> {\n        this.reaction += 10\n      },10)\n    },\n    stopTimer() {\n      this.isPlaying = false\n      this.stopPlaying = true\n      clearInterval(this.timer)\n      console.log(this.reaction);\n      if(this.reaction < 1000){\n        this.reactionResult = 'Good'\n      }\n      else if(this.reaction > 1000 && this.reaction < 2000) {\n        this.reactionResult = 'Not Bad'\n      }else {\n        this.reactionResult = 'Bad'\n      }\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 30px;\n}\nbutton {\n  height: 40px;\n  width: 60px;\n  font-size: 15px;\n  color: purple;\n  background-color: #e0d0e0;\n  border-color: transparent;\n  border-radius: 5px;\n  cursor: pointer;\n}\n.boxContainer {\n  border: 1px solid purple;\n  margin-top: 20px;\n  width: 100%;\n  position: relative;\n}\n.box {\n  background-color: purple;\n  position: absolute;\n  cursor: pointer;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}