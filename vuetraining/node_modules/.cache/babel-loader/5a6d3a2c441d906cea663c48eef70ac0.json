{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startPlaying && $options.startPlaying(...args))\n  }, \"play\"), _ctx.isPalying ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;6DACEA,oBAA2C;IAAlCC,OAAK,yCAAEC,uDAAY;KAAE,MAAI,GACvBC,cAAS,kBAApBC,oBAEM","names":["_createElementVNode","onClick","$options","_ctx","_createElementBlock"],"sourceRoot":"","sources":["/Users/shayan/Desktop/vue/vuetraining2/src/App.vue"],"sourcesContent":["<template>\n  <button @click=\"startPlaying\">play</button>\n  <div v-if=\"isPalying\">\n\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n  data() {\n    return{\n      isPlaying: false,\n      delay: null\n    }\n  },\n  methods: {\n    startPlaying() {\n      this.isPlaying= true\n      this.delay= Math.random()*2000\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}